{"version":3,"sources":["../../src/app.js"],"names":["dotenv","config","app","dataStructure","entries","title","description","users","email","password","fullName","dob","set","process","env","PORT","use","bodyParser","urlencoded","extended","json","get","entriesRouter","usersRouter","server","listen","console","log","mainApp","mainServer"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,iBAAOC,MAAP;AACA,IAAMC,MAAM,wBAAZ;AACA,IAAMC,gBAAgB;AACrBC,UAAS,CAAC;AACTC,SAAO,OADE,EACOC,aAAa;AADpB,EAAD,CADY;AAIrBC,QAAO,CAAC;AACPC,SAAO,kBADA,EACoBC,UAAU,UAD9B,EAC0CC,UAAU,cADpD,EACoEC,KAAK;AADzE,EAAD;AAJc,CAAtB;AAQAT,IAAIU,GAAJ,CAAQ,MAAR,EAAgBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAb,IAAIU,GAAJ,CAAQ,SAAR,EAAmBT,aAAnB;AACAD,IAAIU,GAAJ,CAAQ,YAAR,EAAsB,SAAtB;AACAV,IAAIc,GAAJ,CAAQ,qBAAR;AACAd,IAAIc,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAjB,IAAIc,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;AACAlB,IAAIc,GAAJ,CAAQd,IAAImB,GAAJ,CAAQ,YAAR,CAAR,EAA+BC,oBAA/B;AACApB,IAAIc,GAAJ,CAAQd,IAAImB,GAAJ,CAAQ,YAAR,CAAR,EAA+BE,kBAA/B;AACA,IAAMC,SAAStB,IAAIuB,MAAJ,CAAWvB,IAAImB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChDK,SAAQC,GAAR,CAAY,mCAAZ;AACA,CAFc,CAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAMC,4BAAU1B,GAAhB;AACA,IAAM2B,kCAAaL,MAAnB","file":"app.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport entriesRouter from './routes/entriesApi';\nimport usersRouter from './routes/usersApi';\n\ndotenv.config();\nconst app = express();\nconst dataStructure = {\n\tentries: [{\n\t\ttitle: 'First', description: 'The description',\n\t}],\n\tusers: [{\n\t\temail: 'user@example.com', password: 'password', fullName: 'Example User', dob: '2018-06',\n\t}],\n};\napp.set('port', process.env.PORT || 3000);\napp.set('appData', dataStructure);\napp.set('appVersion', '/api/v1');\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(app.get('appVersion'), entriesRouter);\napp.use(app.get('appVersion'), usersRouter);\nconst server = app.listen(app.get('port'), () => {\n\tconsole.log('Application started. Listening :)');\n});\n// export default server;\n// // export server;\n// export app;\n// export {\n// \tserver,\n// \tapp,\n// };\n// module.exports = {\n// \tapp,\n// \tserver,\n// };\n\nexport const mainApp = app;\nexport const mainServer = server;\n"]}