{"version":3,"sources":["../../../src/routes/entriesApi.js"],"names":["entriesRouter","express","Router","get","req","res","datastructure","app","entries","status","json","error","undefined","params","id","entry","post","body","title","description","message","push"],"mappings":";;;;;;AAAA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,gBAAgBC,kBAAQC,MAAR,EAAtB;;AAEAF,cAAcG,GAAd,CAAkB,UAAlB,EAA8B,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3C,KAAMC,gBAAgBF,IAAIG,GAAJ,CAAQJ,GAAR,CAAY,SAAZ,CAAtB;AACA,KAAI,CAACG,cAAcE,OAAnB,EAA4B;AAC3BH,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,WAAT,EAArB;AACA;AACDN,KAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,cAAcE,OAAnC;AACA,CAND;;AAQAR,cAAcG,GAAd,CAAkB,cAAlB,EAAkC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/C,KAAMC,gBAAgBF,IAAIG,GAAJ,CAAQJ,GAAR,CAAY,SAAZ,CAAtB;AACA,KAAIG,cAAcE,OAAd,KAA0BI,SAA1B,IAAuCN,cAAcE,OAAd,CAAsBJ,IAAIS,MAAJ,CAAWC,EAAjC,MAAyCF,SAApF,EAA+F;AAC9FP,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,4BAAT,EAArB;AACA,EAFD,MAEO;AACN,MAAMI,QAAQT,cAAcE,OAAd,CAAsBJ,IAAIS,MAAJ,CAAWC,EAAjC,CAAd;AACAT,MAAIK,IAAJ,CAASK,KAAT;AACA;AACD,CARD;;AAUAf,cAAcgB,IAAd,CAAmB,UAAnB,EAA+B,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC5C,KAAMC,gBAAgBF,IAAIG,GAAJ,CAAQJ,GAAR,CAAY,SAAZ,CAAtB;AACA,KAAIC,IAAIa,IAAJ,CAASC,KAAT,KAAmB,GAAnB,IAA0Bd,IAAIa,IAAJ,CAASE,WAAT,KAAyB,GAAvD,EAA4D;AAC3Dd,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,yCAAX,EAArB;AACA;AACD,KAAIhB,IAAIa,IAAJ,CAASC,KAAT,IAAkBd,IAAIa,IAAJ,CAASE,WAA/B,EAA4C;AAC3Cb,gBAAcE,OAAd,CAAsBa,IAAtB,CAA2BjB,IAAIa,IAA/B;AACAZ,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,4BAAX,EAArB;AACA,EAHD,MAGO;AACNf,MAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,iBAAX,EAArB;AACA;AACD,CAXD;;kBAcepB,a","file":"entriesApi.js","sourcesContent":["import express from 'express';\n\n// class EntriesApi {\n// \tconstructor() {\n// \t\tconst router = express.Router();\n// \t}\n// \trouter.get('/api/v1/entries', (req, res) => {\n// \t\tconst datastructure = req.app.get('appData');\n// \t\tif (!datastructure.entries) {\n// \t\t\tres.status(404).json({ error: 'Not Found' });\n// \t\t}\n// \t\tres.status(200).json(datastructure.entries);\n// \t});\n// }\n\nconst entriesRouter = express.Router();\n\nentriesRouter.get('/entries', (req, res) => {\n\tconst datastructure = req.app.get('appData');\n\tif (!datastructure.entries) {\n\t\tres.status(404).json({ error: 'Not Found' });\n\t}\n\tres.status(200).json(datastructure.entries);\n});\n\nentriesRouter.get('/entries/:id', (req, res) => {\n\tconst datastructure = req.app.get('appData');\n\tif (datastructure.entries === undefined || datastructure.entries[req.params.id] === undefined) {\n\t\tres.status(404).json({ error: 'This entry cannot be found' });\n\t} else {\n\t\tconst entry = datastructure.entries[req.params.id];\n\t\tres.json(entry);\n\t}\n});\n\nentriesRouter.post('/entries', (req, res) => {\n\tconst datastructure = req.app.get('appData');\n\tif (req.body.title === ' ' || req.body.description === ' ') {\n\t\tres.status(422).json({ message: 'Please fill in all the fields properly!' });\n\t}\n\tif (req.body.title && req.body.description) {\n\t\tdatastructure.entries.push(req.body);\n\t\tres.status(201).json({ message: 'The entry has been created' });\n\t} else {\n\t\tres.status(400).json({ message: 'Invalid request' });\n\t}\n});\n\n\nexport default entriesRouter;\n"]}