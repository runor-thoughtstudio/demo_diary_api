{"version":3,"sources":["../../../src/routes/usersApi.js"],"names":["usersRouter","express","Router","post","req","res","datastructure","app","get","body","email","password","dob","fullName","length","user","users","filter","u","status","json","error","push","payload","token","jwt","sign","expiresIn","setHeader","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,cAAcC,kBAAQC,MAAR,EAApB;;AAEAF,YAAYG,IAAZ,CAAiB,QAAjB,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxC,KAAMC,gBAAgBF,IAAIG,GAAJ,CAAQC,GAAR,CAAY,SAAZ,CAAtB;AADwC,iBAIpCJ,IAAIK,IAJgC;AAAA,KAGvCC,KAHuC,aAGvCA,KAHuC;AAAA,KAGhCC,QAHgC,aAGhCA,QAHgC;AAAA,KAGtBC,GAHsB,aAGtBA,GAHsB;AAAA,KAGjBC,QAHiB,aAGjBA,QAHiB;;AAKxC,KAAIH,SAASE,GAAT,IAAgBC,QAAhB,IAA4BF,QAAhC,EAA0C;AACzC,MAAID,MAAMI,MAAN,GAAe,CAAf,IAAoBF,IAAIE,MAAJ,GAAa,CAAjC,IAAsCD,SAASC,MAAT,GAAkB,CAAxD,IAA6DH,SAASG,MAAT,IAAmB,CAApF,EAAuF;AACtF,OAAMC,OAAOT,cAAcU,KAAd,CAAoBC,MAApB,CAA2B;AAAA,WAAKC,EAAER,KAAF,KAAYA,KAAZ,IAAqBQ,EAAEP,QAAF,KAAeA,QAAzC;AAAA,IAA3B,CAAb;AACA,OAAII,KAAKD,MAAL,GAAc,CAAd,IAAmBC,KAAK,CAAL,EAAQL,KAA/B,EAAsC;AACrCL,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,oCAAT,EAArB;AACA,IAFD,MAEO;AACNf,kBAAcU,KAAd,CAAoBM,IAApB,CAAyBlB,IAAIK,IAA7B;AACA,QAAMc,UAAU;AACfb,YAAON,IAAIK,IAAJ,CAASC;AADD,KAAhB;AAGA,QAAMc,QAAQC,uBAAIC,IAAJ,CAASH,OAAT,EAAkB,SAAlB,EAA6B,EAAEI,WAAW,KAAb,EAA7B,CAAd;AACAtB,QAAIuB,SAAJ,CAAc,OAAd,EAAuBJ,KAAvB;AACAnB,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,iCAAX,EAArB;AACA;AACD,GAbD,MAaO;AACNxB,OAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,yCAAX,EAArB;AACA;AACD,EAjBD,MAiBO;AACNxB,MAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAES,SAAS,kBAAX,EAArB;AACA;AACD,CAzBD;;kBA4Be7B,W","file":"usersApi.js","sourcesContent":["import express from 'express';\nimport jwt from 'jsonwebtoken';\n\nconst usersRouter = express.Router();\n\nusersRouter.post('/users', (req, res) => {\n\tconst datastructure = req.app.get('appData');\n\tconst {\n\t\temail, password, dob, fullName,\n\t} = req.body;\n\tif (email && dob && fullName && password) {\n\t\tif (email.length > 0 && dob.length > 0 && fullName.length > 0 && password.length >= 6) {\n\t\t\tconst user = datastructure.users.filter(u => u.email === email && u.password === password);\n\t\t\tif (user.length > 0 && user[0].email) {\n\t\t\t\tres.status(409).json({ error: 'This email has already been taken!' });\n\t\t\t} else {\n\t\t\t\tdatastructure.users.push(req.body);\n\t\t\t\tconst payload = {\n\t\t\t\t\temail: req.body.email,\n\t\t\t\t};\n\t\t\t\tconst token = jwt.sign(payload, '1357389', { expiresIn: 60000 });\n\t\t\t\tres.setHeader('token', token);\n\t\t\t\tres.status(201).json({ message: 'You have successfully signed up' });\n\t\t\t}\n\t\t} else {\n\t\t\tres.status(422).json({ message: 'Please fill in all the fields properly!' });\n\t\t}\n\t} else {\n\t\tres.status(400).json({ message: 'Invalid Request!' });\n\t}\n});\n\n\nexport default usersRouter;\n"]}